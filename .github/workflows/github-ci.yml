name: Github CI

on: push

env:
  DOCKER_IMAGE_NAME: fredrikfornwall/advent-of-code-2019-rs

jobs:
  test-rust:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Show rust version
      run: rustc --version
    - name: Test and check
      run: make check

  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Test with Python ${{ matrix.python-version }}
      run: make test-python

  build-python-wheels:
    env:
      CIBW_SKIP: "cp27-* cp34-* cp35-* cp36-* pp* *i686 *win32"
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Setup python
        with:
          python-version: '3.7'
      - name: Install bump2version
        run: pip install bump2version
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.5.5 setuptools_rust==0.11.3
      - name: Bump version
        run: bump2version patch
      - name: Build wheels on Linux and macOS
        if: runner.os != 'Windows'
        working-directory: crates/python/
        run: |
          # Fix ../core being outside of the project built by cibuildwheel:
          perl -p -i -e 's/..\/core/core/' Cargo.toml && mv ../core .
          export CIBW_BEFORE_BUILD='pip install setuptools-rust && curl -o /tmp/rustup.sh https://sh.rustup.rs && sh /tmp/rustup.sh -y'
          export CIBW_ENVIRONMENT='PATH=$HOME/.cargo/bin:$PATH'
          python -m cibuildwheel --output-dir wheelhouse
      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        working-directory: crates/python/
        env:
          CIBW_BEFORE_BUILD: "python -m pip install setuptools_rust"
        run: |
          # Fix ../core being outside of the project built by cibuildwheel:
          perl -p -i -e 's/..\/core/core/' Cargo.toml
          move ..\core core
          choco install rust
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./crates/python/wheelhouse/*.whl

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
    - name: Install bump2version
      run: pip install bump2version
    - name: Build docker image
      run: |
        NEW_VERSION=`bump2version patch --allow-dirty --dry-run --list | grep new_version | cut -d = -f 2`
        echo "New version: $NEW_VERSION"
        docker build --tag $(DOCKER_IMAGE_NAME):$(NEW_VERSION) crates/core

  bump-version:
    needs: [test-rust, test-python, build-docker-image, build-python-wheels]
    if: ${{ github.ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install bump2version
      run: pip install bump2version
    - name: Setup git for commit
      run: |
        git config --global user.name 'Bump version workflow'
        git config --global user.email 'bumpversion@users.noreply.github.com'
    - name: Bump version and commit
      run: bump2version --commit patch
    - name: Push changes to git
      run: git push

  release-docker-image:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install bump2version
      run: pip install bump2version
    - name: Push docker image
      env:
        DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      run: |
        CURRENT_VERSION=`bump2version patch --allow-dirty --dry-run --list | grep current_version | cut -d = -f 2`
        echo "Current version: $CURRENT_VERSION"
        docker login -u fredrikfornwall -p $DOCKER_ACCESS_TOKEN
        docker push $(DOCKER_IMAGE_NAME):$(CURRENT_VERSION)

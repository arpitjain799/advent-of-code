#!/bin/sh
set -e -u

usage() {
  echo "usage:\n    ./post-input <service> <year> <day> <part> # reads input from stdin"
  echo "where <service> is one of:"
  echo "- fly"
  echo "- fly-grpc"
  echo "- cloudflare"
  echo "- netlify"
  echo "- local"
  echo "example:\n    ./post-input fly 2019 23 1 < crates/core/src/year2019/day23_input.txt"
  exit 1
}

if [ "$#" != 4 ]; then
  usage
fi

WHERE=$1
YEAR=$2
DAY=$3
PART=$4

case $WHERE in
  fly)
    HOST=https://advent.fly.dev;;
  fly-grpc)
   HOST=fly-grpc;;
  cloudflare)
    HOST=https://aoc.fornwall.workers.dev;;
  netlify)
    HOST=https://mystifying-blackwell-9e705f.netlify.app;;
  local)
    HOST=http://localhost:8080;;
  *)
    echo "Unsupported server: $1 - use one of cloudflare/fly/local/netlify"; exit 1;;
esac

if [ -z "$YEAR" ]; then
  usage
elif [ "$DAY" -ge 26 ] && [ "$PART" -le 0 ]; then
  echo "Invalid day: $DAY - only 1-25 is allowed"
  exit 1
elif [ "$PART" -ge 2 ] && [ "$PART" -le 0 ]; then
  echo "Invalid part: $PART - only 1 or 2 is allowed"
  exit 1
fi


if [ "$HOST" = "fly-grpc" ]; then
    echo | base64 --wrap 0 > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      # GNU coreutils base64, '-w' supported
      BASE64_TEXT=$(base64 --wrap 0)
    else
      # Openssl base64, no wrapping by default
      BASE64_TEXT=$(base64)
    fi

    JSON=$(jq --null-input \
        --arg year $YEAR \
        --arg day $DAY \
        --arg part $PART \
        --arg text "$BASE64_TEXT" \
        '{"year":$year, "day":$day, "part":$part, "text":$text | @base64d }' \
    )
    grpcurl -d "$JSON" \
          advent-grpc.fly.dev:443 \
          advent.Solver/Solve \
            | jq --raw-output .text
else
    curl --fail \
         -w '\n'\
         --data-binary @- \
         "$HOST/solve/$YEAR/$DAY/$PART"
fi
